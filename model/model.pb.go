// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model.proto

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NumberRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberRequest) Reset()         { *m = NumberRequest{} }
func (m *NumberRequest) String() string { return proto.CompactTextString(m) }
func (*NumberRequest) ProtoMessage()    {}
func (*NumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_c1cc6de640cd91d1, []int{0}
}
func (m *NumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberRequest.Unmarshal(m, b)
}
func (m *NumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberRequest.Marshal(b, m, deterministic)
}
func (dst *NumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberRequest.Merge(dst, src)
}
func (m *NumberRequest) XXX_Size() int {
	return xxx_messageInfo_NumberRequest.Size(m)
}
func (m *NumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NumberRequest proto.InternalMessageInfo

func (m *NumberRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type NumberResponse struct {
	Number               int32    `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberResponse) Reset()         { *m = NumberResponse{} }
func (m *NumberResponse) String() string { return proto.CompactTextString(m) }
func (*NumberResponse) ProtoMessage()    {}
func (*NumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_c1cc6de640cd91d1, []int{1}
}
func (m *NumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberResponse.Unmarshal(m, b)
}
func (m *NumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberResponse.Marshal(b, m, deterministic)
}
func (dst *NumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberResponse.Merge(dst, src)
}
func (m *NumberResponse) XXX_Size() int {
	return xxx_messageInfo_NumberResponse.Size(m)
}
func (m *NumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NumberResponse proto.InternalMessageInfo

func (m *NumberResponse) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*NumberRequest)(nil), "model.NumberRequest")
	proto.RegisterType((*NumberResponse)(nil), "model.NumberResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MathClient is the client API for Math service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathClient interface {
	Max(ctx context.Context, opts ...grpc.CallOption) (Math_MaxClient, error)
}

type mathClient struct {
	cc *grpc.ClientConn
}

func NewMathClient(cc *grpc.ClientConn) MathClient {
	return &mathClient{cc}
}

func (c *mathClient) Max(ctx context.Context, opts ...grpc.CallOption) (Math_MaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Math_serviceDesc.Streams[0], "/model.Math/Max", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathMaxClient{stream}
	return x, nil
}

type Math_MaxClient interface {
	Send(*NumberRequest) error
	Recv() (*NumberResponse, error)
	grpc.ClientStream
}

type mathMaxClient struct {
	grpc.ClientStream
}

func (x *mathMaxClient) Send(m *NumberRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mathMaxClient) Recv() (*NumberResponse, error) {
	m := new(NumberResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MathServer is the server API for Math service.
type MathServer interface {
	Max(Math_MaxServer) error
}

func RegisterMathServer(s *grpc.Server, srv MathServer) {
	s.RegisterService(&_Math_serviceDesc, srv)
}

func _Math_Max_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MathServer).Max(&mathMaxServer{stream})
}

type Math_MaxServer interface {
	Send(*NumberResponse) error
	Recv() (*NumberRequest, error)
	grpc.ServerStream
}

type mathMaxServer struct {
	grpc.ServerStream
}

func (x *mathMaxServer) Send(m *NumberResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mathMaxServer) Recv() (*NumberRequest, error) {
	m := new(NumberRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Math_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.Math",
	HandlerType: (*MathServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Max",
			Handler:       _Math_Max_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "model.proto",
}

func init() { proto.RegisterFile("model.proto", fileDescriptor_model_c1cc6de640cd91d1) }

var fileDescriptor_model_c1cc6de640cd91d1 = []byte{
	// 126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xcd, 0x4f, 0x49,
	0xcd, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xd4, 0xb9, 0x78, 0xfd,
	0x4a, 0x73, 0x93, 0x52, 0x8b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xc4, 0xb8, 0xd8,
	0x20, 0x02, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x50, 0x9e, 0x92, 0x06, 0x17, 0x1f, 0x4c,
	0x61, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x2e, 0x95, 0x46, 0x0e, 0x5c, 0x2c, 0xbe, 0x89, 0x25,
	0x19, 0x42, 0x16, 0x5c, 0xcc, 0xbe, 0x89, 0x15, 0x42, 0x22, 0x7a, 0x10, 0x6b, 0x51, 0xac, 0x91,
	0x12, 0x45, 0x13, 0x85, 0x98, 0xa9, 0xc4, 0xa0, 0xc1, 0x68, 0xc0, 0x98, 0xc4, 0x06, 0x76, 0xa2,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x2b, 0xb1, 0xa8, 0xe9, 0xb1, 0x00, 0x00, 0x00,
}
